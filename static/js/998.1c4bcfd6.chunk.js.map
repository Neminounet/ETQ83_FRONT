{"version":3,"file":"static/js/998.1c4bcfd6.chunk.js","mappings":"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","sources":["webpack://en-toute-quietude/./src/pages/Inscription/Inscription.module.css?f7b4","pages/Inscription/Inscription.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContent\":\"Inscription_formContent__zgmdL\",\"formButton\":\"Inscription_formButton__8Fhf0\"};","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { createUser } from \"../../apis/user\";\r\nimport { useContext } from \"react\";\r\nimport AuthContext from \"../../context/AuthContext\";\r\nimport styles from \"./Inscription.module.css\"\r\n\r\nfunction Inscription(){\r\n\r\n    const { user } = useContext(AuthContext);\r\n    \r\n    const navigate = useNavigate()\r\n\r\n    const validationSchema = yup.object({\r\n        last_name: yup\r\n            .string()\r\n            .required(\"Veuillez renseigner votre nom.\")\r\n            .min(2, \"Votre nom doit comporter un minimum de deux caractères.\"),\r\n        first_name: yup\r\n            .string()\r\n            .required(\"Veuillez renseigner votre prénom.\")\r\n            .min(2, \"Votre prénom doit comporter un minimum de deux caractères.\"),\r\n        email: yup\r\n            .string()\r\n            .required(\"Veuillez renseigner une adresse email.\")\r\n            .email(\"L'adresse email doit être valide.\"),\r\n        password: yup\r\n            .string()\r\n            .required(\"Le mot de passe est obligatoire\")\r\n            .min(6, \"Le mot de passe doit comporter un minimum de six caractères.\")\r\n            .matches(/^(?=.*[A-Z])(?=.*\\d).+$/, \"Le mot de passe doit comporter au moins une Majuscule et un chiffre.\"),\r\n        passwordVal: yup\r\n            .string()\r\n            .required(\"Le mot de passe est obligatoire.\")\r\n            .oneOf([yup.ref(\"password\"), \"\"], \"Les mots de passes ne sont pas identiques\")\r\n    })\r\n\r\n    const initialValues = {\r\n        last_name: \"\",\r\n        first_name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordVal: \"\",\r\n    }\r\n\r\n    const { handleSubmit, register, setError, clearErrors, formState: { errors, isSubmitting} } = useForm({\r\n        defaultValues: initialValues,\r\n        resolver: yupResolver(validationSchema),\r\n    });\r\n\r\n    async function submit(values) {\r\n        const { passwordVal, ...restValues} = values\r\n        try {\r\n            clearErrors();\r\n            await createUser(restValues);\r\n            navigate(\"/connexion\");\r\n        } catch(e) {\r\n            console.log(e)\r\n            setError(\"generic\", {type:\"generic\", message: e.email})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {user ? (<Navigate to=\"/workspace\"/>) : (\r\n                <div className=\"pagesContainer\">\r\n                    <div className=\"pagesContent\">\r\n                        <h2>Inscription</h2>\r\n                        <form onSubmit={ handleSubmit(submit) }>\r\n                            <div className={styles.formContent}>\r\n                                <label htmlFor=\"last_name\">Nom</label>\r\n                                <input type=\"text\" name=\"last_name\" {...register(\"last_name\")}/>\r\n                                {errors?.last_name && <p className=\"form-error\">{errors.last_name.message}</p>}\r\n                            </div>\r\n                            <div className={styles.formContent}>\r\n                                <label htmlFor=\"first_name\">Prénom</label>\r\n                                <input type=\"text\" name=\"first_name\" {...register(\"first_name\")}/>\r\n                                {errors?.first_name && <p className=\"form-error\">{errors.first_name.message}</p>}\r\n                            </div>\r\n                            <div className={styles.formContent}>\r\n                                <label htmlFor=\"email\">Adresse email</label>\r\n                                <input type=\"text\" name=\"email\" {...register(\"email\")}/>\r\n                                {errors?.email && <p className=\"form-error\">{errors.email.message}</p>}\r\n                            </div>\r\n                            <div className={styles.formContent}>\r\n                                <label htmlFor=\"password\">Mot de passe</label>\r\n                                <input type=\"password\" name=\"password\" {...register(\"password\")}/>\r\n                                {errors?.password && <p className=\"form-error\">{errors.password.message}</p>}\r\n                            </div>\r\n                            <div className={styles.formContent}>\r\n                                <label htmlFor=\"passwordVal\">Confirmer Mot de passe</label>\r\n                                <input type=\"password\" name=\"passwordVal\" {...register(\"passwordVal\")}/>\r\n                                {errors?.passwordVal && <p className=\"form-error\">{errors.passwordVal.message}</p>}\r\n                            </div>\r\n                            {errors.generic && (\r\n                                <div>\r\n                                    <p className=\"form-error\">\r\n                                        {errors.generic.message.toString()}\r\n                                    </p>\r\n                                </div>\r\n                            )}\r\n                            <div>\r\n                                <button disabled={isSubmitting} className={styles.formButton}>S'inscrire</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Inscription;"],"names":["user","useContext","AuthContext","navigate","useNavigate","validationSchema","yup","last_name","required","min","first_name","email","password","matches","passwordVal","oneOf","_useForm","useForm","defaultValues","resolver","yupResolver","handleSubmit","register","setError","clearErrors","_useForm$formState","formState","errors","isSubmitting","_submit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","restValues","wrap","_context","prev","next","_objectWithoutProperties","_excluded","createUser","t0","console","log","type","message","stop","apply","arguments","_jsx","_Fragment","children","Navigate","to","className","_jsxs","onSubmit","_x","styles","htmlFor","_objectSpread","name","generic","toString","disabled"],"sourceRoot":""}