{"version":3,"file":"static/js/289.787589fd.chunk.js","mappings":"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","sources":["apis/availability.js","apis/message.js","webpack://en-toute-quietude/./src/pages/Workspace/pages/RendezVousDetail/components/Chat.module.css?6ea6","pages/Workspace/pages/RendezVousDetail/components/Chat.js","webpack://en-toute-quietude/./src/pages/Workspace/pages/RendezVousDetail/RendezVousDetail.module.css?4e01","pages/Workspace/pages/RendezVousDetail/RendezVousDetail.js"],"sourcesContent":["const API_URL = \"https://neminounet.pythonanywhere.com\"\r\n\r\nasync function getAvailabilitiesSuperUser() {\r\n    const token = window.localStorage.getItem('token')\r\n    const response = await fetch(`${API_URL}/availability/superuser/`, {\r\n        method: \"GET\", \r\n        headers: {\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\": `Token ${token}`\r\n        }\r\n    });\r\n    const body = await response.json()\r\n    if (response.ok) {\r\n        return body\r\n    } else {\r\n        console.log(response.status, response.statusText)\r\n    }\r\n}\r\n\r\nasync function getAvailabilitiesUser() {\r\n    const token = window.localStorage.getItem('token')\r\n    const response = await fetch(`${API_URL}/availability/user/`, {\r\n        method: \"GET\", \r\n        headers: {\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\": `Token ${token}`\r\n        }\r\n    });\r\n    const body = await response.json()\r\n    // console.log(\"body: \", body)\r\n    if (response.ok) {\r\n        return body\r\n    } else {\r\n        console.log(response.status, response.statusText)\r\n    }\r\n}\r\n\r\nasync function postAvailability(date, heure) {\r\n    const token = window.localStorage.getItem('token')\r\n        const response = await fetch(`${API_URL}/availability/superuser/`, {\r\n            method:\"POST\",\r\n            body: JSON.stringify({date: date, heure: heure}),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Token ${token}`\r\n            }\r\n        });\r\n        if(response.ok) {\r\n            const avails = await getAvailabilitiesSuperUser();\r\n            return avails\r\n        } else {\r\n            console.log(response.status, response.statusText)\r\n        }\r\n} \r\n\r\nasync function deleteAvailability(id) {\r\n    const token = window.localStorage.getItem('token')\r\n    const response = await fetch(`${API_URL}/availability/superuser/${id}`, {\r\n        method:\"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Token ${token}`\r\n        }\r\n    });\r\n    if(response.ok) {\r\n        const avails = await getAvailabilitiesSuperUser();\r\n        return avails\r\n    } else {\r\n        console.log(response.status, response.statusText)\r\n    }\r\n}\r\n\r\nexport { getAvailabilitiesSuperUser, postAvailability, deleteAvailability, getAvailabilitiesUser }\r\n","const API_URL = \"https://neminounet.pythonanywhere.com\"\r\n\r\n//  Récupérer tous les messages :\r\n// ================================\r\n\r\nasync function getAllmessages() {\r\n    const token = window.localStorage.getItem('token')\r\n    const response = await fetch(`${API_URL}/availability/messages/`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Token ${token}`\r\n        }\r\n    })\r\n    if(response.ok) {\r\n        const body = await response.json();\r\n        return body\r\n    } else {\r\n        console.log(response.status, response.statusText);\r\n    }\r\n} \r\n\r\n// Récupérer des messages à partir d'une disponibilité :\r\n// ====================================\r\n\r\nasync function getMessagesFromRDV(id) {\r\n    const token = window.localStorage.getItem('token')\r\n    const response = await fetch(`${API_URL}/availability/messages/?rdv_id=${id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Token ${token}`\r\n        }\r\n    })\r\n    if(response.ok) {\r\n        const body = await response.json();\r\n        return body\r\n    } else {\r\n        console.log(response.status, response.statusText);\r\n        return null;\r\n    }\r\n} \r\n\r\n// poster un message :\r\n// =========================\r\n\r\nasync function postMessage(value) {\r\n    const token = window.localStorage.getItem('token')\r\n        const response = await fetch(`${API_URL}/availability/messages/`, {\r\n            method:\"POST\",\r\n            body: JSON.stringify(value),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Token ${token}`\r\n            }\r\n        });\r\n        if(response.ok) {\r\n           const body = await response.json();\r\n           console.log(body);\r\n        } else {\r\n            console.log(response.status, response.statusText)\r\n        }\r\n} \r\n\r\n// Supprimer un message : \r\n// =================================\r\n\r\nasync function deleteMessage(id) {\r\n    const token = window.localStorage.getItem('token')\r\n    const response = await fetch(`${API_URL}/availability/messages/${id}`, {\r\n        method:\"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Token ${token}`\r\n        }\r\n    });\r\n    if(!response.ok) {\r\n        console.log(response.status, response.statusText)\r\n    } \r\n}\r\nexport { getAllmessages, postMessage, getMessagesFromRDV, deleteMessage};","// extracted by mini-css-extract-plugin\nexport default {\"messageContainer\":\"Chat_messageContainer__piqya\",\"messageHeader\":\"Chat_messageHeader__C1TLF\",\"messageContent\":\"Chat_messageContent__wsB7T\"};","import { useContext, useEffect, useState } from \"react\";\r\nimport AuthContext from \"../../../../../context/AuthContext\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getMessagesFromRDV, postMessage, deleteMessage } from \"../../../../../apis/message\";\r\nimport styles from \"./Chat.module.css\";\r\n\r\n\r\nfunction Chat({ rdv }) {\r\n\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const [ messages, setMessages ] = useState([]);\r\n\r\n    const now = new Date()\r\n\r\n    function displayDate(date){\r\n        const newDate = new Date(date)\r\n        const displayDate = `${newDate.getDate()< 10 ? \"0\"+newDate.getDate(): newDate.getDate()}-${newDate.getMonth() < 9 ? \"0\"+(newDate.getMonth()+1) :newDate.getMonth()+1}-${newDate.getFullYear()} à ${newDate.getHours() < 10 ? \"0\"+newDate.getHours() : newDate.getHours()}:${newDate.getMinutes() < 10 ? \"0\"+newDate.getMinutes(): newDate.getMinutes()}:${newDate.getSeconds() < 10 ? \"0\"+newDate.getSeconds(): newDate.getSeconds()}`;\r\n        return displayDate;\r\n    }\r\n\r\n    function sendDate(date) {\r\n        const sendDate = `${date.getFullYear()}-${date.getMonth() < 9 ? \"0\"+(date.getMonth()+1) :date.getMonth()+1}-${date.getDate()< 10 ? \"0\"+date.getDate(): date.getDate()}T${date.getHours() < 10 ? \"0\"+date.getHours() : date.getHours()}:${date.getMinutes() < 10 ? \"0\"+date.getMinutes(): date.getMinutes()}:${date.getSeconds() < 10 ? \"0\"+date.getSeconds(): date.getSeconds()}`;\r\n        return sendDate;\r\n    }\r\n\r\n    function nowDateFormat(date) {\r\n        const nowDate = `${date.getDate()< 10 ? \"0\"+date.getDate(): date.getDate()}-${date.getMonth() < 9 ? \"0\"+(date.getMonth()+1) :date.getMonth()+1}-${date.getFullYear()}`\r\n        return nowDate\r\n    }\r\n\r\n    \r\n    // console.log(sendDate(now));\r\n\r\n    useEffect(()=> {\r\n        getMessagesFromRDV(rdv.id)\r\n        .then(mes => setMessages(mes))\r\n    },[rdv])\r\n\r\n    \r\n    const validationSchema = yup.object({\r\n        content: yup\r\n            .string()\r\n            .required(\"Vous devez écrire quelque-chose ! :).\")\r\n            .min(1, \"Votre message doit contenir un minimum de un caractère.\")\r\n            .max(1000, \"Votre message ne peut dépasser les 1000 caractères.\"),\r\n    })\r\n    \r\n    const initialValues = {\r\n        content: \"\",\r\n    }\r\n    \r\n    const { handleSubmit, register, reset, clearErrors, formState: { errors, isSubmitting} } = useForm({\r\n        defaultValues: initialValues,\r\n        resolver: yupResolver(validationSchema),\r\n    });\r\n    \r\n    async function submit(values) {\r\n        const submitValues = {\r\n            rdv: rdv.id, \r\n            sender: user.id,\r\n            content: values.content,\r\n            date_time: sendDate(now)\r\n        }\r\n        clearErrors();\r\n       await postMessage(submitValues);\r\n        reset(initialValues);\r\n        const msg = await getMessagesFromRDV(rdv.id)\r\n        setMessages(msg); \r\n    }\r\n\r\n    async function handleDeleteMessage(id) {\r\n        await deleteMessage(id)\r\n        const msg = await getMessagesFromRDV(rdv.id)\r\n        setMessages(msg);\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        if(e.key === \"Enter\" && e.shiftKey === false && e.target.value.trim()!==\"\") {\r\n            e.preventDefault();\r\n            handleSubmit(submit)();\r\n        }\r\n    }\r\n\r\n    return (\r\n       <div className=\"d-flex flex-column ai-center\">\r\n            <h3 className=\"mb-20\">Messagerie</h3>\r\n            <div className={styles.messageContainer}>\r\n                {messages.length > 0 ? (\r\n                    messages.map((msg, index) => {\r\n                        return ( \r\n                            <div key={msg.id}>\r\n                                <div className={styles.messageHeader}>\r\n                                    <p><small>{msg.sender.first_name} {msg.sender.last_name}</small></p>\r\n                                    <p><small>{displayDate(msg.date_time)}</small></p>\r\n                                </div>\r\n                                <div className={styles.messageContent}>\r\n                                    <p>{msg.content}</p>\r\n                                    {user.is_superuser && <button onClick={()=> handleDeleteMessage(msg.id)}>x</button>}\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        )\r\n                    })\r\n                ): (\r\n                    <h5>Pas de message</h5>\r\n                )}\r\n            </div>\r\n            {rdv.availability.date >= nowDateFormat(now) && \r\n                <form onSubmit={ handleSubmit(submit) }>\r\n                    <div>\r\n                        <label htmlFor=\"content\">Message</label>\r\n                        <textarea name=\"content\" id=\"\" cols=\"40\" rows=\"5\" {...register(\"content\")} onKeyDown={ handleKeyDown }></textarea>\r\n                        {errors?.content && <p className=\"form-error\">{errors.content.message}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <button disabled={isSubmitting}>Envoyer message</button>\r\n                    </div>\r\n                </form>\r\n            }\r\n       </div> \r\n    );\r\n}\r\n\r\nexport default Chat;","// extracted by mini-css-extract-plugin\nexport default {\"componentContainer\":\"RendezVousDetail_componentContainer__SUk-7\",\"rdvDetailContainer\":\"RendezVousDetail_rdvDetailContainer__AK8OM\",\"rdvInfo\":\"RendezVousDetail_rdvInfo__PZceK\"};","import { NavLink, useLoaderData, useNavigate } from \"react-router-dom\";\r\nimport Chat from \"./components/Chat\";\r\nimport styles from \"./RendezVousDetail.module.css\";\r\nimport { deleteAvailability } from \"../../../../apis/availability\";\r\nimport { useContext } from \"react\";\r\nimport AuthContext from \"../../../../context/AuthContext\";\r\n\r\nfunction RendezVousDetail() {\r\n\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const rdv = useLoaderData();\r\n\r\n    const navigate = useNavigate()\r\n    async function handleClickDeleteRDV(id){\r\n        await deleteAvailability(id)\r\n        navigate(\"../rendezvous\")\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className={styles.componentContainer}>\r\n            <h1>Rendez-Vous</h1>\r\n            <div className={styles.rdvDetailContainer}>\r\n                <div className=\"d-flex flex-column\">\r\n                    <NavLink className=\"mb-20\" to=\"../rendezvous\">\r\n                        <button>\r\n                        <i className=\"fa-solid fa-arrow-left\"></i>\r\n                        </button>\r\n                    </NavLink>\r\n                    <div className={styles.rdvInfo}>\r\n                        <h3>Détail du Rendez-vous</h3>\r\n                        <h5>RDV du : {rdv.availability.date} à {rdv.availability.heure}</h5>\r\n                        <div className=\"d-flex flex-column ai-center\">\r\n                            <p className=\"mt-20\">Etudiant : {rdv.user.first_name} {rdv.user.last_name}</p>\r\n                            <p className=\"mt-20\">Niveau scolaire : {rdv.degree}</p>\r\n                            { user.is_superuser && <button className=\"mt-20 delete\" onClick={()=> handleClickDeleteRDV(rdv.availability.id)}>Supprimer RDV</button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Chat rdv={rdv}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RendezVousDetail;"],"names":["API_URL","getAvailabilitiesSuperUser","_getAvailabilitiesSuperUser","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","body","wrap","_context","prev","next","window","localStorage","getItem","fetch","concat","method","headers","sent","json","ok","abrupt","console","log","status","statusText","stop","getAvailabilitiesUser","_getAvailabilitiesUser","_callee2","_context2","postAvailability","_x","_x2","_postAvailability","_callee3","date","heure","avails","_context3","JSON","stringify","deleteAvailability","_x3","_deleteAvailability","_callee4","id","_context4","getMessagesFromRDV","_getMessagesFromRDV","postMessage","_postMessage","value","deleteMessage","_deleteMessage","_ref","rdv","user","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","messages","setMessages","now","Date","displayDate","newDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","useEffect","then","mes","validationSchema","yup","content","required","min","max","initialValues","_useForm","useForm","defaultValues","resolver","yupResolver","handleSubmit","register","reset","clearErrors","_useForm$formState","formState","errors","isSubmitting","submit","_submit","values","submitValues","msg","sender","date_time","_handleDeleteMessage","_jsxs","className","children","_jsx","styles","length","map","index","first_name","last_name","is_superuser","onClick","handleDeleteMessage","availability","onSubmit","htmlFor","_objectSpread","name","cols","rows","onKeyDown","e","key","shiftKey","target","trim","preventDefault","message","disabled","useLoaderData","navigate","useNavigate","_handleClickDeleteRDV","NavLink","to","degree","handleClickDeleteRDV","Chat"],"sourceRoot":""}