{"version":3,"file":"static/js/298.c4341ac0.chunk.js","mappings":"sQACA,EAA8B,+BAA9B,EAA0E,8B,SC0E1E,MAnEA,WAEI,IAAAA,GAAwBC,EAAAA,EAAAA,YAAWC,EAAAA,GAA3BC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAETC,EAAmBC,EAAAA,GAAW,CAChCC,MAAOD,EAAAA,KAEFE,SAAS,0CACTD,MAAM,wCACXE,SAAUH,EAAAA,KAELE,SAAS,qCAQlBE,GAA8FC,EAAAA,EAAAA,IAAQ,CAClGC,cANkB,CAClBL,MAAO,GACPE,SAAU,IAKVI,UAAUC,EAAAA,EAAAA,GAAYT,KAFlBU,EAAYL,EAAZK,aAAcC,EAAQN,EAARM,SAAUC,EAAQP,EAARO,SAAUC,EAAWR,EAAXQ,YAAWC,EAAAT,EAAEU,UAAaC,EAAMF,EAANE,OAAQC,EAAYH,EAAZG,aAKvD,SAAAC,IAQpB,OARoBA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAArB,SAAAC,EAAsBC,GAAM,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEN,OAFMF,EAAAC,KAAA,EAEpBb,IAAcY,EAAAE,KAAA,EACR7B,EAAMyB,GAAO,OAAAE,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAG,GAAAH,EAAA,SAEnBb,EAAS,UAAW,CAACiB,KAAK,UAAWC,QAASL,EAAAG,GAAEG,iBAAiB,KACnE,wBAAAN,EAAAO,OAAA,GAAAV,EAAA,mBAELW,MAAA,KAAAC,UAAA,CAED,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACMtC,GAAQoC,EAAAA,EAAAA,KAACG,EAAAA,GAAQ,CAACC,GAAG,gBACnBJ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iBAAgBH,UAC3BI,EAAAA,EAAAA,MAAA,OAAKD,UAAU,eAAcH,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJI,EAAAA,EAAAA,MAAA,QAAMC,SAAWhC,GAlBlC,SAEkBiC,GAAA,OAAAzB,EAAAe,MAAC,KAADC,UAAA,IAgBsCG,SAAA,EACnCI,EAAAA,EAAAA,MAAA,OAAKD,UAAWI,EAAmBP,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SAAOU,QAAQ,QAAOR,SAAC,mBACvBF,EAAAA,EAAAA,KAAA,SAAAW,EAAAA,EAAAA,GAAA,CAAOjB,KAAK,OAAOkB,KAAK,SAAYpC,EAAS,YACtC,OAANK,QAAM,IAANA,OAAM,EAANA,EAAQd,SAASiC,EAAAA,EAAAA,KAAA,KAAGK,UAAU,aAAYH,SAAErB,EAAOd,MAAM4B,cAE9DW,EAAAA,EAAAA,MAAA,OAAKD,UAAWI,EAAmBP,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SAAOU,QAAQ,WAAUR,SAAC,kBAC1BF,EAAAA,EAAAA,KAAA,SAAAW,EAAAA,EAAAA,GAAA,CAAOjB,KAAK,WAAWkB,KAAK,YAAepC,EAAS,eAC7C,OAANK,QAAM,IAANA,OAAM,EAANA,EAAQZ,YAAY+B,EAAAA,EAAAA,KAAA,KAAGK,UAAU,aAAYH,SAAErB,EAAOZ,SAAS0B,aAEnEd,EAAOgC,UACJb,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,aAAYH,SAAErB,EAAOgC,QAAQlB,QAAQmB,gBAG1Dd,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAAA,UAAQe,SAAUjC,EAAcuB,UAAWI,EAAkBP,SAAC,4BAQ9F,C","sources":["webpack://en-toute-quietude/./src/pages/Connexion/Connexion.module.css?ff74","pages/Connexion/Connexion.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContent\":\"Connexion_formContent__OG1y8\",\"formButton\":\"Connexion_formButton__bvNHb\"};","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useContext } from \"react\";\r\nimport AuthContext from \"../../context/AuthContext\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport styles from \"./Connexion.module.css\"\r\n\r\nfunction Connexion() {\r\n\r\n    const { login, user } = useContext(AuthContext);\r\n\r\n    const validationSchema = yup.object({\r\n        email: yup\r\n            .string()\r\n            .required(\"Veuillez renseigner une adresse email.\")\r\n            .email(\"L'adresse email doit Ãªtre valide.\"),\r\n        password: yup\r\n            .string()\r\n            .required(\"Le mot de passe est obligatoire\")\r\n    })\r\n\r\n    const initialValues = {\r\n        email: \"\",\r\n        password: \"\",\r\n    }\r\n\r\n    const { handleSubmit, register, setError, clearErrors, formState: { errors, isSubmitting} } = useForm({\r\n        defaultValues: initialValues,\r\n        resolver: yupResolver(validationSchema),\r\n    });\r\n\r\n    async function submit(values) {\r\n        try {\r\n            clearErrors();\r\n            await login(values)\r\n        } catch(e) {\r\n            setError(\"generic\", {type:\"generic\", message: e.non_field_errors[0]\r\n        })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { user ? (<Navigate to=\"/workspace\"/> ): (\r\n                <div className=\"pagesContainer\">\r\n                    <div className=\"pagesContent\">\r\n                        <h2>Connexion</h2>\r\n                        <form onSubmit={ handleSubmit(submit) }>\r\n                            <div className={styles.formContent}>\r\n                                <label htmlFor=\"email\">Adresse email</label>\r\n                                <input type=\"text\" name=\"email\" {...register(\"email\")}/>\r\n                                {errors?.email && <p className=\"form-error\">{errors.email.message}</p>}\r\n                            </div>\r\n                            <div className={styles.formContent}>\r\n                                <label htmlFor=\"password\">Mot de passe</label>\r\n                                <input type=\"password\" name=\"password\" {...register(\"password\")}/>\r\n                                {errors?.password && <p className=\"form-error\">{errors.password.message}</p>}\r\n                            </div>\r\n                            {errors.generic && (\r\n                                <div>\r\n                                    <p className=\"form-error\">{errors.generic.message.toString()}</p>\r\n                                </div>\r\n                            )}\r\n                            <div>\r\n                                <button disabled={isSubmitting} className={styles.formButton}>Se connecter</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Connexion;"],"names":["_useContext","useContext","AuthContext","login","user","validationSchema","yup","email","required","password","_useForm","useForm","defaultValues","resolver","yupResolver","handleSubmit","register","setError","clearErrors","_useForm$formState","formState","errors","isSubmitting","_submit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","t0","type","message","non_field_errors","stop","apply","arguments","_jsx","_Fragment","children","Navigate","to","className","_jsxs","onSubmit","_x","styles","htmlFor","_objectSpread","name","generic","toString","disabled"],"sourceRoot":""}